name: 'Analyze .map file with mapser'

on:
  push:
    branches:
      - dev
      - "release*"
    tags:
      - '*'
  pull_request:

env:
  TARGETS: f7

jobs:
  mapser_analyse:
    if: ${{ !github.event.pull_request.head.repo.fork }}
    runs-on: [self-hosted,FlipperZeroShell]
    timeout-minutes: 15
    steps:
      - name: 'Wait Build workflow'
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'build-main'
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          intervalSeconds: 20

      - name: 'Check Build workflow status'
        if: steps.wait-for-build.outputs.conclusion == 'failure'
        run: |
          exit 1

      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]; then
            git submodule status || git checkout "$(git rev-list --max-parents=0 HEAD | tail -n 1)"
          fi

      - name: 'Checkout code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Get commit details'
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            TYPE="pull"
          elif [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            TYPE="tag"
          else
            TYPE="other"
          fi
          python3 scripts/get_env.py "--event_file=${{ github.event_path }}" "--type=$TYPE"

      - name: 'Make artifacts directory'
        run: |
          rm -rf artifacts
          mkdir artifacts

      - name: 'Download build artifacts'
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.RSYNC_DEPLOY_PORT }} -H ${{ secrets.RSYNC_DEPLOY_HOST }} > ~/.ssh/known_hosts
          echo "${{ secrets.RSYNC_DEPLOY_KEY }}" > deploy_key;
          chmod 600 ./deploy_key;
          rsync -avzP \
              -e 'ssh -p ${{ secrets.RSYNC_DEPLOY_PORT }} -i ./deploy_key' \
              ${{ secrets.RSYNC_DEPLOY_USER }}@${{ secrets.RSYNC_DEPLOY_HOST }}:"${{ secrets.RSYNC_DEPLOY_BASE_PATH }}${BRANCH_NAME}/" artifacts/;
          rm ./deploy_key;

      - name: 'Upload report to DB'
        run: |
          FBT_TOOLCHAIN_PATH=/opt source scripts/toolchain/fbtenv.sh
          python3 -m pip install mariadb mapser
          python3 scripts/analyse_map.py \
            ${{ secrets.MAP_ANALYSE_MARIADB_USER }} \
            ${{ secrets.MAP_ANALYSE_MARIADB_PASSWORD }} \
            ${{ secrets.MAP_ANALYSE_MARIADB_HOST }} \
            ${{ secrets.MAP_ANALYSE_MARIADB_PORT }} \
            ${{ secrets.MAP_ANALYSE_MARIADB_DATABASE }} \
            artifacts/flipper-z-f7-firmware-${SUFFIX}.elf.map

